buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply from: 'gradle/dependencies.gradle'

group = 'com.fmillone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.codehaus.groovy:groovy-all'
    compile 'com.squareup.retrofit2:retrofit'
    compile 'com.squareup.retrofit2:converter-jackson'
    compile 'com.squareup.okhttp3:okhttp'
    compile 'com.squareup.okhttp3:okhttp-urlconnection'
    compile 'com.squareup.okhttp3:logging-interceptor'
    compile 'io.springfox:springfox-swagger2'
    compile 'io.springfox:springfox-swagger-ui'
    compile 'org.spockframework:spock-core:1.2-groovy-2.5'

    runtime 'com.h2database:h2'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.spockframework:spock-core'
    testCompile 'cglib:cglib-nodep:3.2.5'
    //testCompile 'org.spockframework:spock-spring'

}

bootRun {
    sourceResources sourceSets.main
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename { 'app.jar' }
    mustRunAfter clean
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(':jacocoTestReport')) {
        println 'Disabling groovy optimizations'
        compileGroovy.groovyOptions.optimizationOptions.all = false
    }
}
